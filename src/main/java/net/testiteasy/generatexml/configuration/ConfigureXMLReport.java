package net.testiteasy.generatexml.configuration;

import net.testiteasy.generatexml.GenerateXMLReportException;
import net.testiteasy.generatexml.data.ConfigDataProvider;

/**
 * {@link ConfigureXMLReport} is the main configuration class for Generate-XML library. You can
 * configure the work of functionality by a few ways.
 *
 * <p>For example, you only need to generate aggregated Junit's XML report file from all
 * JSON files which were generated by the testing framework. For this goal you only need to pass
 * 2 parameters when you create object of {@link ConfigureXMLReport()} class.
 *
 * <p>
 *     {@code
 *     ConfigureXMLReport conf = new ConfigureXMLReport("out/xml-report/", "TestProject");
 *     }
 * </p>
 * Where:
 * -- the first parameter is a path to JSON files that will be converted
 * to Java object and will be aggregated to one XML file.
 * -- the second parameter is the name of the project, an aggregated file
 * will be created under this name. Also, if you will use functionality of sending report
 * to report server then the report itself will be displayed under this name.
 *  </p>
 *
 * <p>In additional, if you want to use functionality of sending report you only need pass
 * 2 additional parameters in constructor of {@link ConfigureXMLReport()} class.
 *
 * <p>
 *     {@code
 *     ConfigureXMLReport conf = new ConfigureXMLReport("out/xml-report/", "TestProject", true, true);
 *     }
 * </p>
 * Where additional boolean parameters are:
 * -- the first parameter turn on functionality for creating a zip archive,
 * which is subsequently necessary for sending to the server report.
 * -- the second parameter turn on the functionality to send the previously created zip file
 * to the report server.
 * </p>
 */
public class ConfigureXMLReport {

    private String path;
    private String projectName;
    private boolean reportAsZip;
    private boolean sendReport;

    /**
     * Use this constructor if you added project name and path to JSON's folder
     * as default parameters to gxml.property file
     *
     * @param reportAsZip boolean value which turn on or turnoff functionality for creating zip file
     * @param sendReport boolean value which turn on or turnoff functionality for sending zip file on report server
     */
    public ConfigureXMLReport(final boolean reportAsZip, final boolean sendReport) {
        new ConfigureXMLReport(
                ConfigDataProvider.DEFAULT_FOLDER,
                ConfigDataProvider.DEFAULT_PROJECT_NAME,
                reportAsZip,
                sendReport
        );
    }

    /**
     * Constructor of {@link ConfigureXMLReport} with 2 parameters was created for functionality
     * when the user wants to use only creation one aggregated XML report from all JSON files
     * which were passed as a path parameter.
     *
     * In this constructor, boolean parameters were configured to false
     * for ZIP file and for sending this file to the report server.
     *
     * @param path path to source folder
     * @param projectName project name
     */
    public ConfigureXMLReport(final String path, final String projectName) {
        new ConfigureXMLReport(
                path,
                projectName,
                false,
                false
        );
    }

    /**
     * Full configuration of {@link ConfigureXMLReport} is using when the user can pass his
     * specific configurations for creating one aggregated XML report.
     *
     * @param path path to source folder
     * @param projectName project name
     * @param reportAsZip report as zip
     * @param sendReport send report to report portal
     */
    public ConfigureXMLReport(
            final String path,
            final String projectName,
            final boolean reportAsZip,
            final boolean sendReport
    ) {
        if (path != null & projectName != null) {
            this.path = path;
            this.projectName = projectName.replaceAll("\\s+", "");
        } else {
            throw new GenerateXMLReportException("Arguments path and projectName should not be null but are null!");
        }
        this.reportAsZip = reportAsZip;
        this.sendReport = sendReport;
    }

    public void setProjectName(String projectName) {
        this.projectName = projectName;
    }

    public String getProjectName() {
        return projectName;
    }

    public void setPath(String path) {
        this.path = path;
    }

    public String getPath() {
        return path;
    }

    public boolean isReportAsZip() {
        return reportAsZip;
    }

    public boolean isSendReport() {
        return sendReport;
    }
}
